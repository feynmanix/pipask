[project]
name = "pipask"
version = "0.7.2"
description = "Safer python package installation with audit and consent before install"
authors = [
    { name = "Feynmanix", email = "feynmanix@users.noreply.github.com" },
]
readme = "README.md"
requires-python = ">=3.10"
keywords = ["pip", "security"]
license = "MIT"
dependencies = [
    "click (>=8.1.8,<9.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "rich (>=13.9.4,<14.0.0)",
    "cvss (>=3.4,<4.0)",
    "packaging (>=21.3,<22.0)", # same major version as the corresponding fork of pip uses
    "platformdirs (>=3.8.1,<4.0.0)",  # same major version as the corresponding fork of pip uses
    "urllib3 (>=1.26.17,<2.0.0)"  # same major version as the corresponding fork of pip uses
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Topic :: Software Development",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
#homepage = ""
repository = "https://github.com/feynmanix/pipask"
documentation = "https://github.com/feynmanix/pipask/blob/main/README.md"

[project.scripts]
pipask = "pipask.main:cli"

[tool.poetry]
packages = [{ include = "pipask", from = "src" }]

[tool.poetry.group.dev.dependencies]
pyright = ">=1.1.391"
pytest = ">=8.3.4"
bumpver = "^2024.1130"
pytest-asyncio = ">=0.25.0"
bandit = ">=1.8.0"
ruff = ">=0.8.4"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bumpver]
current_version = "0.7.2"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"src/pipask/__init__.py" = ["{version}"]

[tool.pyright]
include = ["pipask"]
exclude = [
    "**/__pycache__",
    "**/tests",
]
ignore = []

reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.10"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--import-mode=importlib -rA --color=yes"
testpaths = ["tests"]
log_level = "warning"

# asyncio:
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"

markers = [
    "integration: marks tests as integration tests"
]

[tool.ruff]
line-length = 120
extend-exclude = ["src/pipask/_vendor"]

[tool.bandit]
exclude_dirs = ["tests", "src/pipask/_vendor"]
skips = ["B404", "B603"]

